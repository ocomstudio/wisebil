
rules_version = '2';

service cloud.firestore {
  match /databases/{database}/documents {

    // Users can only read and write to their own document.
    match /users/{userId} {
      allow read, update, delete: if request.auth != null && request.auth.uid == userId;
      allow create: if request.auth != null;
    }

    // Enterprises can be created by any authenticated user.
    // They can only be read or updated by members of that enterprise.
    match /enterprises/{enterpriseId} {
      allow create: if request.auth != null && request.resource.data.ownerId == request.auth.uid;
      allow read, update: if request.auth != null && resource.data.memberIds.hasAny([request.auth.uid]);
    }
    
    // Invitations can be created by a member of the enterprise.
    // The invited user can read/update their own invitation.
    match /invitations/{invitationId} {
      function isEnterpriseMember(enterpriseId) {
        return get(/databases/$(database)/documents/enterprises/$(enterpriseId)).data.memberIds.hasAny([request.auth.uid]);
      }
      
      allow create: if request.auth != null && isEnterpriseMember(request.resource.data.enterpriseId);
      allow read, update: if request.auth != null && resource.data.email == request.auth.token.email;
    }
  }
}
